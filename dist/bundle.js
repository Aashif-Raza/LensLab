/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ (() => {

eval("{// Enhanced Photography Portfolio JavaScript\r\n\r\n// DOM Elements\r\nconst navToggle = document.getElementById('nav-toggle');\r\nconst navMenu = document.getElementById('nav-menu');\r\nconst navbar = document.querySelector('.navbar');\r\n\r\n// Initialize the application\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  initializeNavigation();\r\n  initializeSmoothScroll();\r\n  initializeEventHandlers();\r\n  initializeAnimations();\r\n  initializeFormHandling();\r\n  initializeGalleryLightbox();\r\n  initializeScrollEffects();\r\n});\r\n\r\n// Navigation functionality\r\nfunction initializeNavigation() {\r\n  // Mobile menu toggle\r\n  if (navToggle) {\r\n    navToggle.addEventListener('click', function() {\r\n      navMenu.classList.toggle('active');\r\n      navToggle.classList.toggle('active');\r\n    });\r\n  }\r\n\r\n  // Close mobile menu when clicking on a link\r\n  const navLinks = document.querySelectorAll('.nav-link');\r\n  navLinks.forEach(link => {\r\n    link.addEventListener('click', function() {\r\n      navMenu.classList.remove('active');\r\n      navToggle.classList.remove('active');\r\n    });\r\n  });\r\n\r\n  // Close mobile menu when clicking outside\r\n  document.addEventListener('click', function(e) {\r\n    if (!navbar.contains(e.target)) {\r\n      navMenu.classList.remove('active');\r\n      navToggle.classList.remove('active');\r\n    }\r\n  });\r\n\r\n  // Close mobile menu on escape key\r\n  document.addEventListener('keydown', function(e) {\r\n    if (e.key === 'Escape') {\r\n      navMenu.classList.remove('active');\r\n      navToggle.classList.remove('active');\r\n    }\r\n  });\r\n}\r\n\r\n// Smooth scroll for navigation links\r\nfunction initializeSmoothScroll() {\r\n  document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n      const targetId = this.getAttribute('href').slice(1);\r\n      const target = document.getElementById(targetId);\r\n      \r\n      if (target) {\r\n        e.preventDefault();\r\n        \r\n        // Close mobile menu\r\n        navMenu.classList.remove('active');\r\n        navToggle.classList.remove('active');\r\n        \r\n        // Smooth scroll to target\r\n        const headerOffset = 80;\r\n        const elementPosition = target.getBoundingClientRect().top;\r\n        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;\r\n\r\n        window.scrollTo({\r\n          top: offsetPosition,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Event handlers\r\nfunction initializeEventHandlers() {\r\n  // Event button actions with enhanced feedback\r\n  const eventButtons = document.querySelectorAll('.event-button');\r\n  eventButtons.forEach(btn => {\r\n    btn.addEventListener('click', function(e) {\r\n      e.preventDefault();\r\n      \r\n      // Add loading state\r\n      const originalText = btn.textContent;\r\n      btn.textContent = 'Processing...';\r\n      btn.style.opacity = '0.7';\r\n      \r\n      setTimeout(() => {\r\n        if (btn.textContent.includes('Register')) {\r\n          showNotification('Registration feature coming soon! Please contact us for more information.', 'info');\r\n        } else {\r\n          showNotification('More information will be available soon!', 'info');\r\n        }\r\n        \r\n        // Restore button\r\n        btn.textContent = originalText;\r\n        btn.style.opacity = '1';\r\n      }, 1000);\r\n    });\r\n  });\r\n\r\n  // Social media links with proper URLs\r\n  const socialLinks = document.querySelectorAll('.social-links a');\r\n  const socialUrls = [\r\n    'https://facebook.com/',\r\n    'https://www.instagram.com/aasifraza_0786/?hl=en#',\r\n    'https://x.com/AashifR88038',\r\n    'https://youtube.com/channel/INVALID_CHANNEL_ID'\r\n  ];\r\n  \r\n  socialLinks.forEach((link, index) => {\r\n    link.setAttribute('target', '_blank');\r\n    link.setAttribute('rel', 'noopener noreferrer');\r\n    link.setAttribute('href', socialUrls[index] || '#');\r\n    \r\n    link.addEventListener('click', function(e) {\r\n      if (this.getAttribute('href') === '#') {\r\n        e.preventDefault();\r\n        showNotification('Social media links will be updated soon!', 'info');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Animations and scroll effects\r\nfunction initializeAnimations() {\r\n  // Intersection Observer for fade-in animations\r\n  const observerOptions = {\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -50px 0px'\r\n  };\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.style.opacity = '1';\r\n        entry.target.style.transform = 'translateY(0)';\r\n      }\r\n    });\r\n  }, observerOptions);\r\n\r\n  // Observe elements for animation\r\n  const animateElements = document.querySelectorAll('.gallery-item, .exhibit-item, .event-card, .contact-item');\r\n  animateElements.forEach(el => {\r\n    el.style.opacity = '0';\r\n    el.style.transform = 'translateY(30px)';\r\n    el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\r\n    observer.observe(el);\r\n  });\r\n}\r\n\r\n// Scroll effects\r\nfunction initializeScrollEffects() {\r\n  // Navbar background on scroll\r\n  window.addEventListener('scroll', function() {\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    \r\n    if (scrollTop > 100) {\r\n      navbar.classList.add('scrolled');\r\n    } else {\r\n      navbar.classList.remove('scrolled');\r\n    }\r\n  });\r\n\r\n  // Active navigation link highlighting\r\n  const sections = document.querySelectorAll('section[id]');\r\n  const navLinks = document.querySelectorAll('.nav-link');\r\n\r\n  window.addEventListener('scroll', function() {\r\n    let current = '';\r\n    const scrollTop = window.pageYOffset;\r\n\r\n    sections.forEach(section => {\r\n      const sectionTop = section.offsetTop - 100;\r\n      const sectionHeight = section.offsetHeight;\r\n      \r\n      if (scrollTop >= sectionTop && scrollTop < sectionTop + sectionHeight) {\r\n        current = section.getAttribute('id');\r\n      }\r\n    });\r\n\r\n    navLinks.forEach(link => {\r\n      link.classList.remove('active');\r\n      if (link.getAttribute('href') === `#${current}`) {\r\n        link.classList.add('active');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Form handling\r\nfunction initializeFormHandling() {\r\n  const contactForm = document.getElementById('contact-form');\r\n  \r\n  if (contactForm) {\r\n    contactForm.addEventListener('submit', function(e) {\r\n      e.preventDefault();\r\n      \r\n      const submitBtn = this.querySelector('.submit-btn');\r\n      const originalText = submitBtn.textContent;\r\n      \r\n      // Show loading state\r\n      submitBtn.textContent = 'Sending...';\r\n      submitBtn.disabled = true;\r\n\r\n      // Initialize EmailJS\r\n      if (window.emailjs) {\r\n        emailjs.init(\"fyJCsJKO47hJDArDl\");\r\n        emailjs.sendForm(\r\n          \"000677\",\r\n          \"template_iffqm6g\",\r\n          this\r\n        )\r\n          .then(() => {\r\n            showNotification(\r\n              `Hi ${this.elements['name'].value},<br><br>\r\n              Thank you for reaching out! ðŸ™Œ<br><br>\r\n              Weâ€™ve received your message:<br>\r\n              <blockquote>\"${this.elements['message'].value}\"</blockquote><br>\r\n              Weâ€™ll get back to you as soon as possible, typically within 24 hours.<br><br>\r\n              Best regards,<br>\r\n              Md Aashif Raza<br>\r\n              <hr>\r\n              <small>This is an automated confirmation email. Please do not reply directly to this message.</small>`,\r\n              'success'\r\n            );\r\n            this.reset();\r\n            submitBtn.textContent = originalText;\r\n            submitBtn.disabled = false;\r\n          }, (error) => {\r\n            showNotification('Sorry, there was an error sending your message. Please try again later.', 'error');\r\n            submitBtn.textContent = originalText;\r\n            submitBtn.disabled = false;\r\n          });\r\n      } else {\r\n        showNotification('Email service not loaded. Please try again later.', 'error');\r\n        submitBtn.textContent = originalText;\r\n        submitBtn.disabled = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Gallery lightbox functionality\r\nfunction initializeGalleryLightbox() {\r\n  const galleryItems = document.querySelectorAll('.gallery-item');\r\n  \r\n  galleryItems.forEach(item => {\r\n    item.addEventListener('click', function() {\r\n      const img = this.querySelector('img');\r\n      const title = this.querySelector('.gallery-overlay h3')?.textContent || 'Gallery Image';\r\n      \r\n      openLightbox(img.src, title);\r\n    });\r\n  });\r\n}\r\n\r\n// Lightbox functionality\r\nfunction openLightbox(imageSrc, title) {\r\n  // Create lightbox elements\r\n  const lightbox = document.createElement('div');\r\n  lightbox.className = 'lightbox';\r\n  lightbox.innerHTML = `\r\n    <div class=\"lightbox-content\">\r\n      <span class=\"lightbox-close\">&times;</span>\r\n      <img src=\"${imageSrc}\" alt=\"${title}\">\r\n      <h3>${title}</h3>\r\n    </div>\r\n  `;\r\n  \r\n  // Add lightbox styles\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n    .lightbox {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.9);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      z-index: 10000;\r\n      opacity: 0;\r\n      transition: opacity 0.3s ease;\r\n    }\r\n    .lightbox.show {\r\n      opacity: 1;\r\n    }\r\n    .lightbox-content {\r\n      position: relative;\r\n      max-width: 90%;\r\n      max-height: 90%;\r\n    }\r\n    .lightbox-content img {\r\n      max-width: 100%;\r\n      max-height: 80vh;\r\n      object-fit: contain;\r\n      border-radius: 10px;\r\n    }\r\n    .lightbox-content h3 {\r\n      color: white;\r\n      text-align: center;\r\n      margin-top: 20px;\r\n      font-size: 1.2rem;\r\n    }\r\n    .lightbox-close {\r\n      position: absolute;\r\n      top: -40px;\r\n      right: 0;\r\n      color: white;\r\n      font-size: 30px;\r\n      cursor: pointer;\r\n      transition: color 0.3s ease;\r\n    }\r\n    .lightbox-close:hover {\r\n      color: #ffd700;\r\n    }\r\n  `;\r\n  \r\n  document.head.appendChild(style);\r\n  document.body.appendChild(lightbox);\r\n  \r\n  // Show lightbox\r\n  setTimeout(() => lightbox.classList.add('show'), 10);\r\n  \r\n  // Close lightbox functionality\r\n  const closeLightbox = () => {\r\n    lightbox.classList.remove('show');\r\n    setTimeout(() => {\r\n      document.body.removeChild(lightbox);\r\n      document.head.removeChild(style);\r\n    }, 300);\r\n  };\r\n  \r\n  lightbox.querySelector('.lightbox-close').addEventListener('click', closeLightbox);\r\n  lightbox.addEventListener('click', function(e) {\r\n    if (e.target === lightbox) closeLightbox();\r\n  });\r\n  \r\n  // Close on escape key\r\n  document.addEventListener('keydown', function closeOnEscape(e) {\r\n    if (e.key === 'Escape') {\r\n      closeLightbox();\r\n      document.removeEventListener('keydown', closeOnEscape);\r\n    }\r\n  });\r\n}\r\n\r\n// Notification system\r\nfunction showNotification(message, type = 'info') {\r\n  // Remove existing notifications\r\n  const existingNotifications = document.querySelectorAll('.notification');\r\n  existingNotifications.forEach(notification => notification.remove());\r\n  \r\n  // Create notification element\r\n  const notification = document.createElement('div');\r\n  notification.className = `notification notification-${type}`;\r\n  notification.innerHTML = `\r\n    <div class=\"notification-content\">\r\n      <span class=\"notification-message\">${message}</span>\r\n      <button class=\"notification-close\">&times;</button>\r\n    </div>\r\n  `;\r\n  \r\n  // Add notification styles\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n    .notification {\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: white;\r\n      border-radius: 10px;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n      z-index: 10001;\r\n      transform: translateX(400px);\r\n      transition: transform 0.3s ease;\r\n      max-width: 350px;\r\n    }\r\n    .notification.show {\r\n      transform: translateX(0);\r\n    }\r\n    .notification-content {\r\n      padding: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n    .notification-message {\r\n      flex: 1;\r\n      margin-right: 15px;\r\n    }\r\n    .notification-close {\r\n      background: none;\r\n      border: none;\r\n      font-size: 20px;\r\n      cursor: pointer;\r\n      color: #666;\r\n      transition: color 0.3s ease;\r\n    }\r\n    .notification-close:hover {\r\n      color: #333;\r\n    }\r\n    .notification-success {\r\n      border-left: 4px solid #28a745;\r\n    }\r\n    .notification-info {\r\n      border-left: 4px solid #17a2b8;\r\n    }\r\n    .notification-warning {\r\n      border-left: 4px solid #ffc107;\r\n    }\r\n    .notification-error {\r\n      border-left: 4px solid #dc3545;\r\n    }\r\n  `;\r\n  \r\n  document.head.appendChild(style);\r\n  document.body.appendChild(notification);\r\n  \r\n  // Show notification\r\n  setTimeout(() => notification.classList.add('show'), 10);\r\n  \r\n  // Auto-hide after 5 seconds\r\n  setTimeout(() => {\r\n    notification.classList.remove('show');\r\n    setTimeout(() => {\r\n      if (document.body.contains(notification)) {\r\n        document.body.removeChild(notification);\r\n        document.head.removeChild(style);\r\n      }\r\n    }, 300);\r\n  }, 5000);\r\n  \r\n  // Close button functionality\r\n  notification.querySelector('.notification-close').addEventListener('click', () => {\r\n    notification.classList.remove('show');\r\n    setTimeout(() => {\r\n      if (document.body.contains(notification)) {\r\n        document.body.removeChild(notification);\r\n        document.head.removeChild(style);\r\n      }\r\n    }, 300);\r\n  });\r\n}\r\n\r\n// Utility functions\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n// Performance optimization\r\nconst optimizedScrollHandler = debounce(function() {\r\n  // Add any scroll-based optimizations here\r\n}, 16); // ~60fps\r\n\r\nwindow.addEventListener('scroll', optimizedScrollHandler);\r\n\r\n// Export functions for potential external use\r\nwindow.PhotographyPortfolio = {\r\n  showNotification,\r\n  openLightbox,\r\n  debounce\r\n};\r\n\n\n//# sourceURL=webpack://md-aashif-raza---lenslab/./script.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./script.js"]();
/******/ 	
/******/ })()
;